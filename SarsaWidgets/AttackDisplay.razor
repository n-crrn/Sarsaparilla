@*
 * Provides a visual display of an attack.
 *@
@using StatefulHorn
@using StatefulHorn.Query

<div class='outer'>
    @if (Attack != null)
    {
        <div class='attack-summary'>
            <span class='query-message'>@Attack.Query</span>
            @if (!Attack.Actual.Equals(Attack.Query))
            {
                <span class='query-as'>( as @Attack.Actual )</span>
            }
            @if (!Attack.Transformation.IsEmpty)
            {
                <span class='transformation'>@Attack.Transformation</span>
            }
        </div>
        <div class='rule-listing'>
            <RuleSourceDisplay Rule=@Attack.Clause/>
        </div>
        <div class='premise-listing'>
            @foreach (Attack premiseAttack in Attack.Premises.Values)
            {
                <AttackDisplay Attack=@premiseAttack />
            }
        </div>
    }
    else
    {
        <div class='no-attack-message'>No attack to display.</div>
    }
</div>

@code {

    [Parameter]
    public Attack? Attack { get; set; }

}
